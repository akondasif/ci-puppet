#!/bin/bash

set -eu

source /etc/lsb-release

pp() {
  local blue="\033[34m"
  local reset="\033[0m"
  while read line; do
    echo -e "${blue}[bootstrap]${reset} ${line}"
  done
}

quieten_sudo() {
  echo "--> Set root profile to quieten sudo tty message" | pp
  echo '[[ $(test -t 0) ]] && mesg n' > /root/.profile
}

set_uk_apt_sources() {
  echo "--> Set sources.list to gb and update apt cache" | pp
  sed -i 's|http://us|http://gb|' /etc/apt/sources.list
  apt-get update -qq
  apt-get install -qq python-software-properties curl 2>&1 | pp
  test -f /etc/apt/sources.list.d/gds-govuk-${DISTRIB_CODENAME}.list || add-apt-repository -y ppa:gds/govuk 2>&1 | pp
  apt-get update -qq
}

check_ruby() {
  echo "--> Check for Ruby" | pp
  [[ $(dpkg -s ruby1.9.1 >/dev/null 2>&1) ]] || \
    apt-get install -qq ruby1.9.1 2>&1 | pp
}

fix_hostname() {
  MYFQDN=$1
  MYHOSTNAME=${MYFQDN%%.*}
  MYDOMAIN=${MYFQDN#*.}
  sed -i "s:^127.0.1.1.*:127.0.1.1\t$MYHOSTNAME $MYFQDN:g" /etc/hosts
  hostname $MYHOSTNAME
  cat <<EOF >/etc/resolv.conf
nameserver 8.8.8.8
nameserver 8.8.4.4
search $MYDOMAIN
EOF
  cp /etc/resolv.conf /etc/resolvconf/resolv.conf.d/original
}

partition_disks() {
  echo "--> partioning disks" | pp
  for disk in /dev/sd?; do
    echo "--> checking ${disk}" | pp
    if ! sudo parted -a optimal --script  ${disk} -- print
    then
      echo "--> partitioning ${disk}" | pp
      sudo parted -a optimal --script ${disk} -- mklabel msdos
      sudo parted -a optimal --script ${disk} -- mkpart primary 1 100%
      sudo parted -a optimal --script ${disk} -- set 1 lvm on
    else
      echo "--> $disk already partitioned" | pp
    fi
  done
}

main() {
  quieten_sudo
  set_uk_apt_sources
  check_ruby
  partition_disks
  if [ "$1" != "unset" ]; then
    fix_hostname $1
  fi
  if [ -f /vagrant/vendor/jdk-7u9-linux-x64.tar.gz ]; then
    mkdir -p /var/cache/oracle-jdk7-installer
    cp /vagrant/vendor/jdk-7u9-linux-x64.tar.gz /var/cache/oracle-jdk7-installer
  fi
}

if [ $# -eq 1 ]; then
   main $1
else
   main "unset"
fi

